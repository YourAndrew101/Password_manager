<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                          
                    >

    <SolidColorBrush x:Key="WindowButtonStyle.Static.Background" Color="{DynamicResource WindowButton.Static.Background}"/>
    <SolidColorBrush x:Key="WindowButtonStyle.IsMouseOver.Background" Color="{DynamicResource WindowButton.IsMouseOver.Background}"/>
    <SolidColorBrush x:Key="WindowButtonStyle.IsPressed.Background" Color="{DynamicResource WindowButton.IsPressed.Background}"/>

    <LinearGradientBrush x:Key="GradientRectangleStyle.Static.Fill" StartPoint="0,0" EndPoint="1,0">
        <GradientStop Color="{DynamicResource GradientStop1}" Offset="0"/>
        <GradientStop Color="{DynamicResource GradientStop2}" Offset="0.5"/>
        <GradientStop Color="{DynamicResource GradientStop3}" Offset="1"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="NavmenuItemStyle.Active.Foreground" Color="{DynamicResource NavmenuItem.Active.Foreground}"/>
    <SolidColorBrush x:Key="NavmenuItemStyle.InActive.Foreground" Color="{DynamicResource NavmenuItem.InActive.Foreground}"/>
    <SolidColorBrush x:Key="NavmenuItemStyle.Pressed.Background" Color="{DynamicResource NavmenuItem.Pressed.Background}"/>
    <SolidColorBrush x:Key="NavmenuItemStyle.IsMouseOver.Foreground" Color="{DynamicResource NavmenuItem.IsMouseOver.Foreground}"/>

    <SolidColorBrush x:Key="SearchTextBoxStyle.Static.Border.Background" Color="{DynamicResource SearchTextBox.Static.Border.Background}"/>
    <SolidColorBrush x:Key="SearchTextBoxStyle.Static.Border.BorderBrush" Color="{DynamicResource SearchTextBox.Static.Border.BorderBrush}"/>
    <SolidColorBrush x:Key="SearchTextBoxStyle.IsMouseOver.Border.BorderBrush" Color="{DynamicResource SearchTextBox.IsMouseOver.Border.BorderBrush}"/>
    <SolidColorBrush x:Key="SearchTextBoxStyle.IsFocused.Border.BorderBrush" Color="{DynamicResource SearchTextBox.IsFocused.Border.BorderBrush}"/>
    <SolidColorBrush x:Key="SearchTextBoxStyle.Static.BorderBrush" Color="{DynamicResource SearchTextBox.Static.BorderBrush}"/>
    <SolidColorBrush x:Key="SearchTextBoxStyle.IsEnabledFalse.BorderBrush" Color="{DynamicResource SearchTextBox.IsEnabledFalse.Border.BorderBrush}"/>
    <SolidColorBrush x:Key="SearchTextBoxStyle.IsEnabledFalse.Background" Color="{DynamicResource SearchTextBox.IsEnabledFalse.Background}"/>
    

    <SolidColorBrush x:Key="AddButtonStyle.Static.Background" Color="{DynamicResource AddButton.Static.Background}"/>
    <SolidColorBrush x:Key="AddButtonStyle.IsPressed.Background" Color="{DynamicResource AddButton.IsPressed.Background}"/>
    <SolidColorBrush x:Key="AddButtonStyle.IsMouseOver.Background" Color="{DynamicResource AddButton.IsMouseOver.Background}"/>
    <SolidColorBrush x:Key="AddButtonStyle.IsEnabledFalse.Background" Color="{DynamicResource AddButton.IsEnabledFalse.Background}"/>
    <SolidColorBrush x:Key="AddButtonStyle.Text.Foreground" Color="{DynamicResource AddButton.Text.Foreground}"/>

    <SolidColorBrush x:Key="TextBoxStyle.Static.Border.Background" Color="{DynamicResource TextBox.Static.Border.Background}"/>
    <SolidColorBrush x:Key="TextBoxStyle.Static.Border.BorderBrush" Color="{DynamicResource TextBox.Static.Border.BorderBrush}"/>
    <SolidColorBrush x:Key="TextBoxStyle.IsMouseOver.Border.BorderBrush" Color="{DynamicResource TextBox.IsMouseOver.Border.BorderBrush}"/>
    <SolidColorBrush x:Key="TextBoxStyle.IsFocused.Border.BorderBrush" Color="{DynamicResource TextBox.IsFocused.Border.BorderBrush}"/>
    <SolidColorBrush x:Key="TextBoxStyle.Static.BorderBrush" Color="{DynamicResource TextBox.Static.BorderBrush}"/>
    <SolidColorBrush x:Key="TextBoxStyle.IsEnabledFalse.BorderBrush" Color="{DynamicResource TextBox.IsEnabledFalse.Border.BorderBrush}"/>
    <SolidColorBrush x:Key="TextBoxStyle.IsEnabledFalse.Background" Color="{DynamicResource TextBox.IsEnabledFalse.Background}"/>

    <SolidColorBrush x:Key="SubmitButtonStyle.Static.Background" Color="{DynamicResource SubmitButton.Static.Background}"/>
    <SolidColorBrush x:Key="SubmitButtonStyle.IsPressed.Background" Color="{DynamicResource SubmitButton.IsPressed.Background}"/>
    <SolidColorBrush x:Key="SubmitButtonStyle.IsMouseOver.Background" Color="{DynamicResource SubmitButton.IsMouseOver.Background}"/>
    <SolidColorBrush x:Key="SubmitButtonStyle.IsEnabledFalse.Background" Color="{DynamicResource SubmitButton.IsEnabledFalse.Background}"/>
    <SolidColorBrush x:Key="SubmitButtonStyle.Text.Foreground" Color="{DynamicResource SubmitButton.Text.Foreground}"/>

    <SolidColorBrush x:Key="NotificationBorderStyle.Static.Background" Color="{DynamicResource NotificationBorder.Static.Background}"/>
    <SolidColorBrush x:Key="NotificationTextBlockStyle.Static.Foreground" Color="{DynamicResource NotificationTextBlock.Text.Foreground}"/>

    <Style x:Key="WindowButtonStyle" TargetType="Button">
        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Background="{TemplateBinding Background}"
                            Height="{TemplateBinding Height}"
                            Width="{TemplateBinding Width}">

                            <TextBlock Text="{TemplateBinding Property=Content}"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                       FontFamily="Segoe MDL2 Assets"
                                       Foreground="{DynamicResource TextColor}"
                                       FontSize="10"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="{DynamicResource WindowButtonStyle.Static.Background}"/>
        </Style.Setters>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource WindowButtonStyle.IsMouseOver.Background}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource WindowButtonStyle.IsPressed.Background}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="WindowToggleButton" TargetType="ToggleButton">
        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Background="{TemplateBinding Background}"
                            Height="{TemplateBinding Height}"
                            Width="{TemplateBinding Width}">

                            <TextBlock 
                                x:Name="text"
                                Text="{TemplateBinding Property=Content}"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                       FontFamily="Segoe MDL2 Assets"
                                       Foreground="{DynamicResource TextColor}"
                                       FontSize="10"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="text" Property="Text" Value="&#xE923;"/>
                            </Trigger>


                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>

            </Setter>
            <Setter Property="Background" Value="{DynamicResource WindowButtonStyle.Static.Background}"/>
        </Style.Setters>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource WindowButtonStyle.IsMouseOver.Background}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource WindowButtonStyle.IsPressed.Background}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="NavmenuItem" TargetType="RadioButton">
        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Grid
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="{TemplateBinding Background}"
                            Height="{TemplateBinding Height}"
                            Width="{TemplateBinding Width}"
                            
                            >

                            <TextBlock 
                                x:Name="text"
                                Text="{TemplateBinding Property=Content}"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                
                                       FontFamily="Segoe MDL2 Assets"
                                       
                                       FontSize="20"
                                />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource NavmenuItemStyle.InActive.Foreground}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Foreground" Value="{DynamicResource NavmenuItemStyle.Active.Foreground}"/>


                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="{DynamicResource NavmenuItemStyle.IsMouseOver.Foreground}"/>

                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>

            </Setter>
            <Setter Property="Background" Value="{DynamicResource WindowButtonStyle.Static.Background}"/>
        </Style.Setters>
    </Style>
    <Style x:Key="PressedNavmenuItem" TargetType="Rectangle">
        <Style.Setters>
            <Setter Property="Fill" Value="{DynamicResource NavmenuItemStyle.Pressed.Background}"/>

        </Style.Setters>

    </Style>


    <Style x:Key="PageHeader" TargetType="TextBlock">
        <Style.Setters>
            <Setter Property="FontFamily" Value="Global Sans Serif"/>
            <Setter Property="FontSize" Value="36"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <!--<Setter Property="Margin" Value="20,0,0,0"/>-->
        </Style.Setters>
    </Style>


    <Style x:Key="SearchTextBox" TargetType="TextBox">
        <Style.Setters>
            <Setter Property="CaretBrush" Value="{DynamicResource TextColor}"/>
            <Setter Property="OverridesDefaultStyle" Value="True"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border x:Name="border" BorderThickness="2" 
                                CornerRadius="5" Background="{DynamicResource SearchTextBoxStyle.Static.Border.Background}" 
                                BorderBrush="{DynamicResource SearchTextBoxStyle.Static.Border.BorderBrush}">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock x:Name="Loop" RenderTransformOrigin="0.5,0.6"  Text="&#xE721;" FontFamily="Segoe MDL2 Assets" HorizontalAlignment="Left" VerticalAlignment="Center" Padding="10,0,5,0">
                                    <TextBlock.RenderTransform>
                                        <RotateTransform x:Name="RotateLoop" Angle="-90"/>
                                    </TextBlock.RenderTransform>
                                </TextBlock>
                                <ScrollViewer x:Name="PART_ContentHost" Padding="{TemplateBinding Padding}"/>
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource SearchTextBoxStyle.IsMouseOver.Border.BorderBrush}"></Setter>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetName="RotateLoop" Storyboard.TargetProperty="Angle"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Setter Property="Foreground" TargetName="Loop" Value="{DynamicResource SearchTextBoxStyle.IsFocused.Border.BorderBrush}"></Setter>
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource SearchTextBoxStyle.IsFocused.Border.BorderBrush}"/>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" To="-90" Storyboard.TargetName="RotateLoop" Storyboard.TargetProperty="Angle"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="False">
                                <Trigger.Setters>

                                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource SearchTextBoxStyle.IsEnabledFalse.BorderBrush}"></Setter>
                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource SearchTextBoxStyle.IsEnabledFalse.Background}"></Setter>
                                </Trigger.Setters>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Setter Property="Padding" Value="5"/>
            <Setter Property="FontFamily" Value="Global Sans Serif"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="BorderBrush" Value="{DynamicResource SearchTextBoxStyle.Static.BorderBrush}"/>
        </Style.Setters>
    </Style>

    <Style x:Key="AddButtonStyle" TargetType="Button">
        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                            x:Name="border"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            
                            Background="{TemplateBinding Background}"
                            Height="{TemplateBinding Height}"
                            Width="{TemplateBinding Width}"
                            CornerRadius="5"
                            BorderThickness="0">
                            <TextBlock Text="{TemplateBinding Property=Content}"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                       FontFamily="Segoe MDL2 Assets"
                                       Foreground="{DynamicResource AddButtonStyle.Text.Foreground}"
                                       FontSize="18"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>

            </Setter>
            <Setter Property="Background" Value="{DynamicResource AddButtonStyle.Static.Background}"/>


        </Style.Setters>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <!--<Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="{DynamicResource AddButton.IsPressed.Background}" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>-->
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Background" Value="{DynamicResource AddButtonStyle.IsMouseOver.Background}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource AddButtonStyle.IsPressed.Background}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource AddButtonStyle.IsEnabledFalse.Background}"/>
            </Trigger>
        </Style.Triggers>

    </Style>



    <Style x:Key="Shadow" TargetType="Grid">
        <Style.Setters>
            <Setter Property="Background" Value="Black"/>
            <Setter Property="Visibility" Value="Collapsed"/>
        </Style.Setters>
        <!--<Style.Triggers>
            <Trigger Property="Visibility" Value="Visible">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.3" From="0" To="0.75" Storyboard.TargetProperty="Opacity"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.3" From="0.75" To="0" Storyboard.TargetProperty="Opacity"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>-->
    </Style>
    <!--Visibility="Collapsed" x:Name="FormBody" Background="Red" VerticalAlignment="Center" HorizontalAlignment="Center"-->
    <Style x:Key="AddEditForm" TargetType="Grid">

        <Style.Setters>
            <Setter Property="Visibility" Value="Collapsed"/>
            <Setter Property="Background" Value="{DynamicResource MainColor}"/>

        </Style.Setters>
    </Style>

    <Style x:Key="TextBoxStyle" TargetType="TextBox">
        <Style.Setters>
            <Setter Property="CaretBrush" Value="{DynamicResource TextColor}"/>
            <Setter Property="OverridesDefaultStyle" Value="True"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border x:Name="border" BorderThickness="2" 
                                CornerRadius="5" Background="{DynamicResource TextBoxStyle.Static.Border.Background}" 
                                BorderBrush="{DynamicResource TextBoxStyle.Static.Border.BorderBrush}">
                            <ScrollViewer x:Name="PART_ContentHost" Padding="{TemplateBinding Padding}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource TextBoxStyle.IsMouseOver.Border.BorderBrush}"></Setter>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource TextBoxStyle.IsFocused.Border.BorderBrush}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Trigger.Setters>
                                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource TextBoxStyle.IsEnabledFalse.BorderBrush}"></Setter>
                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource TextBoxStyle.IsEnabledFalse.Background}"></Setter>
                                </Trigger.Setters>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Setter Property="Padding" Value="5"/>
            <Setter Property="FontFamily" Value="Global Sans Serif"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxStyle.Static.BorderBrush}"/>
        </Style.Setters>
    </Style>

    <Style x:Key="PasswordCompexityRectangleStyle" TargetType="{x:Type Rectangle}">
        <Style.Setters>
            <Setter Property="Fill" Value="{DynamicResource PasswordCompexityRectangleStyle.Static.Fill}"/>
            <Setter Property="Height" Value="14"/>
            <Setter Property="Width" Value="60"/>
            <Setter Property="Stroke" Value="{DynamicResource PasswordCompexityRectangleStyle.Static.Stroke}"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Visibility" Value="Visible"/>
        </Style.Setters>
    </Style>

    <Style x:Key="SubmitButtonStyle" TargetType="Button">
        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                            
                            Background="{TemplateBinding Background}"
                            Height="{TemplateBinding Height}"
                            Width="{TemplateBinding Width}"
                            CornerRadius="25"
                            BorderThickness="0">
                            <TextBlock Text="{TemplateBinding Property=Content}"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                       FontFamily="Global Sans Serif"
                                       Foreground="{DynamicResource SubmitButtonStyle.Text.Foreground}"
                                       FontSize="18"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="{DynamicResource SubmitButtonStyle.Static.Background}"/>

        </Style.Setters>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Background" Value="{DynamicResource SubmitButtonStyle.IsMouseOver.Background}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource SubmitButtonStyle.IsPressed.Background}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource SubmitButtonStyle.IsEnabledFalse.Background}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CancelButtonStyle" TargetType="Button">
        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">

                        <TextBlock
                            Text="{TemplateBinding Property=Content}"
                                      
                                       FontFamily="Global Sans Serif"
                                       Foreground="{DynamicResource TextColor}"
                                       FontSize="18"
                                    TextDecorations="None"
                            Name="textB"
                                    />
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand"/>
                                <Setter Property="TextDecorations" Value="Underline" TargetName="textB"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>

            </Setter>
        </Style.Setters>
        
    </Style>

    <Style x:Key="SuggestPassword" TargetType="Button">
        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                            
                            Background="{TemplateBinding Background}"
                            Height="{TemplateBinding Height}"
                            Width="{TemplateBinding Width}"
                            CornerRadius="5"
                            BorderThickness="0">
                            <TextBlock Text="{TemplateBinding Property=Content}"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Left"
                                       Padding="5,0,0,0"
                                       FontFamily="Global Sans Serif"
                                       Foreground="{DynamicResource SubmitButtonStyle.Text.Foreground}"
                                       FontSize="14"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            
            
            <Setter Property="Background" Value="{DynamicResource SubmitButtonStyle.Static.Background}"/>
            <Setter Property="Visibility" Value="Collapsed"/>

        </Style.Setters>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Background" Value="{DynamicResource SubmitButtonStyle.IsMouseOver.Background}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource SubmitButtonStyle.IsPressed.Background}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource SubmitButtonStyle.IsEnabledFalse.Background}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="NotificationBorderStyle" TargetType="Border">
        <Style.Setters>
            <Setter Property="CornerRadius" Value="5"/>
            <Setter Property="Background" Value="{DynamicResource NotificationBorderStyle.Static.Background}"/>
            <!--<Setter Property="Margin" Value="0,0,0,20"/>-->
            <Setter Property="Padding" Value="15,0,15,0"/>
        </Style.Setters>
    </Style>
    <Style x:Key="NotificationTextStyle" TargetType="TextBlock">
        <Style.Setters>
            <Setter Property="Foreground" Value="{DynamicResource NotificationTextBlockStyle.Static.Foreground}"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="Global Sans Serif"/>
            <Setter Property="FontSize" Value="20"/>
        </Style.Setters>
    </Style>
</ResourceDictionary>