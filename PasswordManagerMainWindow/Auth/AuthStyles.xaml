<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <SolidColorBrush x:Key="CloseAppButtonStyle.Static.Background" Color="Transparent"/>
    <SolidColorBrush x:Key="CloseAppButtonStyle.IsMouseOver.Background" Color="#99aab5"/>
    <SolidColorBrush x:Key="CloseAppButtonStyle.IsPressed.Background" Color="#7289da"/>

    <SolidColorBrush x:Key="AuthErrorTextBlockStyle.Static.Foreground" Color="Red"/>

    <SolidColorBrush x:Key="SubmitButtonStyle.Static.Background" Color="#7289da"/>
    <SolidColorBrush x:Key="SubmitButtonStyle.IsPressed.Background" Color="#99aab5"/>
    <SolidColorBrush x:Key="SubmitButtonStyle.Text.Foreground" Color="White"/>

    <SolidColorBrush x:Key="EmailTextBoxStyle.Static.Border.Background" Color="White"/>
    <SolidColorBrush x:Key="EmailTextBoxStyle.Static.Border.BorderBrush" Color="LightGray"/>
    <SolidColorBrush x:Key="EmailTextBoxStyle.IsMouseOver.Border.BorderBrush" Color="LightGray"/>
    <SolidColorBrush x:Key="EmailTextBoxStyle.IsFocused.Border.BorderBrush" Color="#7289da"/>
    <SolidColorBrush x:Key="EmailTextBoxStyle.Static.BorderBrush" Color="Black"/>

    <SolidColorBrush x:Key="PasswordBoxStyle.Static.Border.Background" Color="White"/>
    <SolidColorBrush x:Key="PasswordBoxStyle.Static.Border.BorderBrush" Color="LightGray"/>
    <SolidColorBrush x:Key="PasswordBoxStyle.IsMouseOver.Border.BorderBrush" Color="LightGray"/>
    <SolidColorBrush x:Key="PasswordBoxStyle.IsFocused.Border.BorderBrush" Color="#7289da"/>
    <SolidColorBrush x:Key="PasswordBoxStyle.Static.BorderBrush" Color="Black"/>

    <SolidColorBrush x:Key="PasswordCompexityRectangleStyle.Static.Fill" Color="#EBEBEB"/>
    <SolidColorBrush x:Key="PasswordCompexityRectangleStyle.Static.Stroke" Color="#C6C6C6"/>

    <LinearGradientBrush x:Key="GradientRectangleStyle.Static.Fill" StartPoint="0,1" EndPoint="0,0">
        <GradientStop Color="#3A1C71" Offset="0"/>
        <GradientStop Color="#D76D77" Offset="0.5"/>
        <GradientStop Color="#FFAF7B" Offset="1"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="RememberMeCheckBoxStyle.Static.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="RememberMeCheckBoxStyle.Grid.Static.Background" Color="Transparent"/>
    <SolidColorBrush x:Key="RememberMeCheckBoxStyle.Static.Border" Color="#7289da"/>
    <SolidColorBrush x:Key="RememberMeCheckBoxStyle.Pressed.Background" Color="#7289da"/>
    <SolidColorBrush x:Key="RememberMeCheckBoxStyle.Pressed.Border" Color="#7289da"/>
    <SolidColorBrush x:Key="RememberMeCheckBoxStyle.Pressed.Glyph" Color="White"/>
    <SolidColorBrush x:Key="RememberMeCheckBoxStyle.Static.Glyph" Color="White"/>


    <Style x:Key="CloseAppButtonStyle" TargetType="Button">
        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Background="{TemplateBinding Background}"
                            Height="{TemplateBinding Height}"
                            Width="{TemplateBinding Width}">

                            <TextBlock Text="{TemplateBinding Property=Content}"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                       FontFamily="Segoe MDL2 Assets"
                                       Foreground="Black"
                                       FontSize="16"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="{StaticResource CloseAppButtonStyle.Static.Background}"/>
        </Style.Setters>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource CloseAppButtonStyle.IsMouseOver.Background}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource CloseAppButtonStyle.IsPressed.Background}"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="AuthErrorTextBlockStyle" TargetType="TextBlock">
        <Style.Setters>
            <Setter Property="Foreground" Value="{StaticResource AuthErrorTextBlockStyle.Static.Foreground}"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontFamily" Value="Global Sans Serif"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Margin" Value="0,15,0,0"/>
            <Setter Property="Visibility" Value="Hidden"/>
        </Style.Setters>
    </Style>


    <Style x:Key="SubmitButtonStyle" TargetType="Button">
        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Background="{TemplateBinding Background}"
                            Height="{TemplateBinding Height}"
                            Width="{TemplateBinding Width}"
                            CornerRadius="25"
                            BorderThickness="0">
                            <TextBlock Text="{TemplateBinding Property=Content}"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                       FontFamily="Global Sans Serif"
                                       Foreground="{StaticResource SubmitButtonStyle.Text.Foreground}"
                                       FontSize="18"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="{StaticResource SubmitButtonStyle.Static.Background}"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style.Setters>
        <Style.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource SubmitButtonStyle.IsPressed.Background}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="EmailTextBoxStyle" TargetType="TextBox">
        <Style.Setters>
            <Setter Property="OverridesDefaultStyle" Value="True"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border x:Name="border" BorderThickness="2" 
                                CornerRadius="5" Background="{StaticResource EmailTextBoxStyle.Static.Border.Background}" 
                                BorderBrush="{StaticResource EmailTextBoxStyle.Static.Border.BorderBrush}">
                            <ScrollViewer x:Name="PART_ContentHost" Padding="{TemplateBinding Padding}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource EmailTextBoxStyle.IsMouseOver.Border.BorderBrush}"></Setter>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource EmailTextBoxStyle.IsFocused.Border.BorderBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Setter Property="Padding" Value="5"/>
            <Setter Property="FontFamily" Value="Global Sans Serif"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="BorderBrush" Value="{StaticResource EmailTextBoxStyle.Static.BorderBrush}"/>
        </Style.Setters>
    </Style>
    
    
    <Style x:Key="PasswordBoxStyle" TargetType="PasswordBox">
        <Style.Setters>
            <Setter Property="OverridesDefaultStyle" Value="True"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="PasswordBox">
                        <Border x:Name="border" BorderThickness="2" 
                                CornerRadius="5" Background="{StaticResource PasswordBoxStyle.Static.Border.Background}" 
                                BorderBrush="{StaticResource PasswordBoxStyle.Static.Border.BorderBrush}">
                            <ScrollViewer x:Name="PART_ContentHost" Padding="{TemplateBinding Padding}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource PasswordBoxStyle.IsMouseOver.Border.BorderBrush}"></Setter>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource PasswordBoxStyle.IsFocused.Border.BorderBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Setter Property="Padding" Value="5,5,30,5"/>
            <Setter Property="FontFamily" Value="Global Sans Serif"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="BorderBrush" Value="{StaticResource PasswordBoxStyle.Static.BorderBrush}"/>
        </Style.Setters>
    </Style>


    <Style x:Key="PasswordCompexityRectangleStyle" TargetType="{x:Type Rectangle}">
        <Style.Setters>
            <Setter Property="Fill" Value="{StaticResource PasswordCompexityRectangleStyle.Static.Fill}"/>
            <Setter Property="Height" Value="14"/>
            <Setter Property="Width" Value="60"/>
            <Setter Property="Stroke" Value="{StaticResource PasswordCompexityRectangleStyle.Static.Stroke}"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Visibility" Value="Visible"/>
        </Style.Setters>
    </Style>


    <Style x:Key="ShowPasswordToggleButtonStyle" TargetType="ToggleButton">
        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Image x:Name="img" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Fill">
                            <Image.Style>
                                <Style TargetType="Image">
                                    <Setter Property="Source" Value="/Auth/Assets/eye.png"/>
                                </Style>
                            </Image.Style>
                        </Image>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="img" Property="Source" Value="/Auth/Assets/closed_eye.png"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Visibility" Value="Hidden"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Width" Value="30"/>
            <Setter Property="Margin" Value="5,0,5,0"/>
        </Style.Setters>
    </Style>


    <Style x:Key="GradientRectangleStyle" TargetType="Rectangle">
        <Style.Setters>
            <Setter Property="Fill" Value="{StaticResource GradientRectangleStyle.Static.Fill}">
            </Setter>
        </Style.Setters>
    </Style>


    <Style x:Key="RememberMeCheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="Background" Value="{StaticResource RememberMeCheckBoxStyle.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource RememberMeCheckBoxStyle.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Padding" Value="5,6,0,0"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontFamily" Value="Global Sans Serif"/>
        <Setter Property="Margin" Value="0,0,0,20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="templateRoot" Background="{StaticResource RememberMeCheckBoxStyle.Grid.Static.Background}" SnapsToDevicePixels="True" UseLayoutRounding="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" 
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" CornerRadius="3"
                                Height="25" Width="25"
                                >
                            <Grid x:Name="markGrid">
                                <Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " 
                                      Fill="{StaticResource RememberMeCheckBoxStyle.Static.Glyph}" Margin="3" Opacity="0" Stretch="Fill"/>
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" 
                                          RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource RememberMeCheckBoxStyle.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource RememberMeCheckBoxStyle.Pressed.Border}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RememberMeCheckBoxStyle.Pressed.Glyph}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource RememberMeCheckBoxStyle.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource RememberMeCheckBoxStyle.Pressed.Border}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RememberMeCheckBoxStyle.Pressed.Glyph}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>