<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:res="clr-namespace:PasswordManager.Properties"
                    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
                    >

    <SolidColorBrush x:Key="WindowButtonStyle.Static.Background" Color="{DynamicResource WindowButton.Static.Background}"/>
    <SolidColorBrush x:Key="WindowButtonStyle.IsMouseOver.Background" Color="{DynamicResource WindowButton.IsMouseOver.Background}"/>
    <SolidColorBrush x:Key="WindowButtonStyle.IsPressed.Background" Color="{DynamicResource WindowButton.IsPressed.Background}"/>

    <LinearGradientBrush x:Key="GradientRectangleStyle.Static.Fill" StartPoint="0,0" EndPoint="1,0">
        <GradientStop Color="{DynamicResource GradientStop1}" Offset="0"/>
        <GradientStop Color="{DynamicResource GradientStop2}" Offset="0.5"/>
        <GradientStop Color="{DynamicResource GradientStop3}" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="NavmenuItemStyle.Active.Foreground" Color="{DynamicResource NavmenuItem.Active.Foreground}"/>
    <SolidColorBrush x:Key="NavmenuItemStyle.InActive.Foreground" Color="{DynamicResource NavmenuItem.InActive.Foreground}"/>
    <SolidColorBrush x:Key="NavmenuItemStyle.Pressed.Background" Color="{DynamicResource NavmenuItem.Pressed.Background}"/>
    <SolidColorBrush x:Key="NavmenuItemStyle.IsMouseOver.Foreground" Color="{DynamicResource NavmenuItem.IsMouseOver.Foreground}"/>
    <SolidColorBrush x:Key="NotificationBorderStyle.Static.Background" Color="{DynamicResource NotificationBorder.Static.Background}"/>
    <SolidColorBrush x:Key="NotificationTextBlockStyle.Static.Foreground" Color="{DynamicResource NotificationTextBlock.Text.Foreground}"/>
    <Style x:Key="WindowButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Background="{TemplateBinding Background}"
                            Height="{TemplateBinding Height}"
                            Width="{TemplateBinding Width}">

                        <TextBlock Text="{TemplateBinding Property=Content}"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                       FontFamily="Segoe MDL2 Assets"
                                       Foreground="{DynamicResource TextColor}"
                                       FontSize="10"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{DynamicResource WindowButtonStyle.Static.Background}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource WindowButtonStyle.IsMouseOver.Background}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource WindowButtonStyle.IsPressed.Background}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="WindowToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Background="{TemplateBinding Background}"
                            Height="{TemplateBinding Height}"
                            Width="{TemplateBinding Width}">

                        <TextBlock 
                                x:Name="text"
                                Text="{TemplateBinding Property=Content}"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                       FontFamily="Segoe MDL2 Assets"
                                       Foreground="{DynamicResource TextColor}"
                                       FontSize="10"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="text" Property="Text" Value="&#xE923;"/>
                        </Trigger>


                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>

        </Setter>
        <Setter Property="Background" Value="{DynamicResource WindowButtonStyle.Static.Background}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource WindowButtonStyle.IsMouseOver.Background}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource WindowButtonStyle.IsPressed.Background}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="NavmenuItem" TargetType="{x:Type RadioButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="{TemplateBinding Background}"
                            Height="{TemplateBinding Height}"
                            Width="{TemplateBinding Width}"
                            
                            >

                        <TextBlock 
                                x:Name="text"
                                Text="{TemplateBinding Property=Content}"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                
                                       FontFamily="Segoe MDL2 Assets"
                                       
                                       FontSize="20"
                                />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource NavmenuItemStyle.InActive.Foreground}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource NavmenuItemStyle.Active.Foreground}"/>


                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource NavmenuItemStyle.IsMouseOver.Foreground}"/>

                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>

        </Setter>
        <Setter Property="Background" Value="{DynamicResource WindowButtonStyle.Static.Background}"/>
    </Style>
    <Style x:Key="PressedNavmenuItem" TargetType="{x:Type Rectangle}">
        <Setter Property="Fill" Value="{DynamicResource NavmenuItemStyle.Pressed.Background}"/>

    </Style>
    <Style x:Key="PageHeader" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="Global Sans Serif"/>
        <Setter Property="FontSize" Value="36"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <Style x:Key="NotificationBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="CornerRadius" Value="5"/>
        <Setter Property="Background" Value="{DynamicResource NotificationBorderStyle.Static.Background}"/>
        <!--<Setter Property="Margin" Value="0,0,0,20"/>-->
        <Setter Property="Padding" Value="15,0,15,0"/>
    </Style>
    <Style x:Key="NotificationTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{DynamicResource NotificationTextBlockStyle.Static.Foreground}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="Global Sans Serif"/>
        <Setter Property="FontSize" Value="20"/>
    </Style>

    <SolidColorBrush x:Key="PrimaryListViewStyle.Background" Color="{DynamicResource PrimaryListView.Background}"/>

    <Style TargetType="ListView" x:Key="PrimaryListView">

        <Setter Property="Background" Value="{DynamicResource PrimaryListViewStyle.Background}"/>
        <Setter Property= "ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <SolidColorBrush x:Key="PrimaryListViewItemStyle.Static.Background" Color="{DynamicResource PrimaryListViewItem.Static.Background}"/>
    <Style TargetType="ListViewItem" x:Key="PrimaryListViewItem" >
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Grid Background="{TemplateBinding Background }">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PrimaryListViewHeader" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Width" Value="700"/>
        <Setter Property="FontFamily" Value="Global Sans Serif"/>
        <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>

    </Style>

</ResourceDictionary>