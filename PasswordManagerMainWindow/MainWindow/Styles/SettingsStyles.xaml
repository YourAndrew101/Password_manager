<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
                    >

    <SolidColorBrush x:Key="SettingsListViewStyle.Background" Color="{DynamicResource SettingsListView.Background}"/>

    <Style TargetType="{x:Type ListView}" x:Key="SettingsListView">

        <Setter Property="Background" Value="{DynamicResource SettingsListViewStyle.Background}"/>
        <Setter Property= "ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="BorderThickness" Value="0"/>


    </Style>

    <SolidColorBrush x:Key="SettingsListViewItemStyle.Static.Background" Color="{DynamicResource SettingsListViewItem.Static.Background}"/>
    <Style TargetType="{x:Type ListViewItem}" x:Key="SettingsListViewItem" >
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SettingHeaderStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Width" Value="700"/>
        <Setter Property="FontFamily" Value="Global Sans Serif"/>
        <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>

    </Style>


    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle StrokeDashArray="1 2" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" Margin="2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="ComboBox.Static.Background" Color = "{DynamicResource SettingComboBox.Background}"/>
    <SolidColorBrush x:Key="ComboBox.Static.Border" Color="{DynamicResource SettingComboBox.BorderBrush.Static}"/>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="{DynamicResource SettingComboBox.Glyph.Static}"/>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Background" Color="{DynamicResource SettingComboBox.Background}"/>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="{DynamicResource SettingComboBox.BorderBrush.Static}"/>
    <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="{DynamicResource SettingComboBox.Glyph.Checked}"/>
    <SolidColorBrush x:Key="ComboBox.Pressed.Background" Color="{DynamicResource SettingComboBox.Background}" />
    <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="{DynamicResource  SettingComboBox.BorderBrush.Checked}"/>
    <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="{DynamicResource SettingComboBox.Glyph.Static}"/>

    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="templateRoot" SnapsToDevicePixels="true" Background="{StaticResource ComboBox.Static.Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource ComboBox.Static.Border}" CornerRadius="5">
                        <Border x:Name="splitBorder" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" SnapsToDevicePixels="true" Margin="0" HorizontalAlignment="Right" BorderThickness="1" BorderBrush="Transparent">
                            <Path x:Name="arrow" VerticalAlignment="Center" Margin="0" HorizontalAlignment="Center" Fill="{StaticResource ComboBox.Static.Glyph}" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
                        </MultiDataTrigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                            <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                            <Setter Property="CornerRadius" TargetName="templateRoot" Value="5,5,0,0"/>
                            <Setter Property="BorderThickness" TargetName="templateRoot" Value="2,2,2,0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                    <Border x:Name="dropDownBorder" Background="{DynamicResource SettingsListViewStyle.Background}"  BorderThickness="2,0,2,2" CornerRadius="0,0,5,5" Padding="0,0,0,5">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                    <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Themes:SystemDropShadowChrome>
            </Popup>
            <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                <Setter Property="Color" TargetName="shadow" Value="#71000000"/>

            </Trigger>
            <Trigger Property="IsOpen" SourceName="PART_Popup" Value="true">
                <Setter Property="BorderBrush" TargetName="dropDownBorder" Value="{StaticResource ComboBox.Pressed.Border}"/>


            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF"/>

    <Style x:Key="SettingComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
        <Setter Property="FontFamily" Value="Global Sans Serif"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="190"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="Padding" Value="5,0,5,0"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>

        <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
    </Style>
    <SolidColorBrush x:Key="SettingComboBoxItemStyle.Static.Background" Color="{DynamicResource SettingComboBoxItem.Static.Background}"/>
    <SolidColorBrush x:Key="SettingComboBoxItemStyle.IsHighlighted.Background" Color="{DynamicResource SettingComboBoxItem.IsHighlighted.Background}"/>
    <Style x:Key="SettingComboBoxItemStyle" TargetType="ComboBoxItem">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter Margin="5,0,5,0" VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{DynamicResource ComboBox.Static.Background}"/>
        <Style.Triggers>

            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" Value ="{DynamicResource SettingComboBoxItemStyle.IsHighlighted.Background}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <SolidColorBrush x:Key="SettingToggleButtonStyle.BackRectangle.Background.Unchecked" Color="{DynamicResource SettingToggleButton.BackRectangle.Background.Unchecked}"/>
    <SolidColorBrush x:Key="SettingToggleButtonStyle.BackRectangle.Background.Checked" Color="{DynamicResource SettingToggleButton.BackRectangle.Background.Checked}"/>
    <SolidColorBrush x:Key="SettingToggleButtonStyle.FrontRectangle.Background" Color="{DynamicResource SettingToggleButton.FrontRectangle.Background}"/>

    <Style x:Key="SettingToggleButton" TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <Border x:Name="backRect" CornerRadius="15" Margin="-1" Background="{DynamicResource SettingToggleButtonStyle.BackRectangle.Background.Unchecked}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" SnapsToDevicePixels="True" RenderOptions.BitmapScalingMode="Fant" RenderOptions.EdgeMode="Aliased" UseLayoutRounding="True">
                        </Border>
                        <Border x:Name="frontRect"  Height="20" Width="20" CornerRadius="12" Margin="-1" Background="{DynamicResource SettingToggleButtonStyle.FrontRectangle.Background}" SnapsToDevicePixels="True" RenderOptions.BitmapScalingMode="Fant" RenderOptions.EdgeMode="Aliased" UseLayoutRounding="True">
                            <Border.RenderTransform>
                                <TranslateTransform x:Name="frontRectMovement"/>
                            </Border.RenderTransform>
                            <ContentPresenter
               HorizontalAlignment="Center" 
               VerticalAlignment="Center"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Resources>

                    </ControlTemplate.Resources>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsChecked" Value="False">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation  Duration="0:0:0.3" To="-10" From ="10" Storyboard.TargetName="frontRectMovement" Storyboard.TargetProperty="X"/>
                                        <DoubleAnimation Duration="0:0:0.15" From="20" To="35" Storyboard.TargetName="frontRect" Storyboard.TargetProperty="Width"/>
                                        <DoubleAnimation Duration="0:0:0.15" From="35" To="20" BeginTime="0:0:0.15" Storyboard.TargetName="frontRect" Storyboard.TargetProperty="Width"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>


                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.3" To="10" From="-10" Storyboard.TargetName="frontRectMovement" Storyboard.TargetProperty="X"/>
                                        <DoubleAnimation Duration="0:0:0.15" From="20" To="35" Storyboard.TargetName="frontRect" Storyboard.TargetProperty="Width"/>
                                        <DoubleAnimation Duration="0:0:0.15" From="35" To="20" BeginTime="0:0:0.15" Storyboard.TargetName="frontRect" Storyboard.TargetProperty="Width"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation  Duration="0:0:0.3" To="-10" From ="10" Storyboard.TargetName="frontRectMovement" Storyboard.TargetProperty="X"/>
                                        <DoubleAnimation Duration="0:0:0.15" From="20" To="35" Storyboard.TargetName="frontRect" Storyboard.TargetProperty="Width"/>
                                        <DoubleAnimation Duration="0:0:0.15" From="35" To="20" BeginTime="0:0:0.15" Storyboard.TargetName="frontRect" Storyboard.TargetProperty="Width"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="Background" TargetName="backRect" Value="{DynamicResource SettingToggleButtonStyle.BackRectangle.Background.Checked}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>

        </Setter>
        <!--<Setter Property="IsChecked" Value="True"/>-->
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="50"/>
        <Setter Property="Focusable" Value="False"/>
        <Style.Triggers>


        </Style.Triggers>
    </Style>
    <Style x:Key="SettingTextBox" TargetType="TextBox" BasedOn="{StaticResource PrimaryTextBoxStyle}">
        <Setter Property="Width" Value="190"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
    </Style>
    
</ResourceDictionary>